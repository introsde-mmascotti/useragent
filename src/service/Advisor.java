
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import healthprofile.storage.service.Measure;
import healthprofile.storage.service.Person;
import recipestorage.service.Ingredient;
import recipestorage.service.Recipe;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Advisor", targetNamespace = "http://service/")
@XmlSeeAlso({
    healthprofile.storage.service.ObjectFactory.class,
    recipestorage.service.ObjectFactory.class,
    service.ObjectFactory.class
})
public interface Advisor {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<recipestorage.service.Recipe>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRecipe", targetNamespace = "http://service/", className = "service.FindRecipe")
    @ResponseWrapper(localName = "findRecipeResponse", targetNamespace = "http://service/", className = "service.FindRecipeResponse")
    @Action(input = "http://service/Advisor/findRecipeRequest", output = "http://service/Advisor/findRecipeResponse")
    public List<Recipe> findRecipe(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<recipestorage.service.Ingredient>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findIngredient", targetNamespace = "http://service/", className = "service.FindIngredient")
    @ResponseWrapper(localName = "findIngredientResponse", targetNamespace = "http://service/", className = "service.FindIngredientResponse")
    @Action(input = "http://service/Advisor/findIngredientRequest", output = "http://service/Advisor/findIngredientResponse")
    public List<Ingredient> findIngredient(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "saveRecipe", targetNamespace = "http://service/", className = "service.SaveRecipe")
    @ResponseWrapper(localName = "saveRecipeResponse", targetNamespace = "http://service/", className = "service.SaveRecipeResponse")
    @Action(input = "http://service/Advisor/saveRecipeRequest", output = "http://service/Advisor/saveRecipeResponse")
    public Recipe saveRecipe(
        @WebParam(name = "arg0", targetNamespace = "")
        Recipe arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addRecipeIngredient", targetNamespace = "http://service/", className = "service.AddRecipeIngredient")
    @ResponseWrapper(localName = "addRecipeIngredientResponse", targetNamespace = "http://service/", className = "service.AddRecipeIngredientResponse")
    @Action(input = "http://service/Advisor/addRecipeIngredientRequest", output = "http://service/Advisor/addRecipeIngredientResponse")
    public Recipe addRecipeIngredient(
        @WebParam(name = "arg0", targetNamespace = "")
        Recipe arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Ingredient arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeRecipeIngredient", targetNamespace = "http://service/", className = "service.RemoveRecipeIngredient")
    @ResponseWrapper(localName = "removeRecipeIngredientResponse", targetNamespace = "http://service/", className = "service.RemoveRecipeIngredientResponse")
    @Action(input = "http://service/Advisor/removeRecipeIngredientRequest", output = "http://service/Advisor/removeRecipeIngredientResponse")
    public Recipe removeRecipeIngredient(
        @WebParam(name = "arg0", targetNamespace = "")
        Recipe arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Ingredient arg1);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns recipestorage.service.Recipe
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "replaceRecipeIngredient", targetNamespace = "http://service/", className = "service.ReplaceRecipeIngredient")
    @ResponseWrapper(localName = "replaceRecipeIngredientResponse", targetNamespace = "http://service/", className = "service.ReplaceRecipeIngredientResponse")
    @Action(input = "http://service/Advisor/replaceRecipeIngredientRequest", output = "http://service/Advisor/replaceRecipeIngredientResponse")
    public Recipe replaceRecipeIngredient(
        @WebParam(name = "arg0", targetNamespace = "")
        Recipe arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Ingredient arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        double arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHealthAdvice", targetNamespace = "http://service/", className = "service.GetHealthAdvice")
    @ResponseWrapper(localName = "getHealthAdviceResponse", targetNamespace = "http://service/", className = "service.GetHealthAdviceResponse")
    @Action(input = "http://service/Advisor/getHealthAdviceRequest", output = "http://service/Advisor/getHealthAdviceResponse")
    public String getHealthAdvice(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Recipe> arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns healthprofile.storage.service.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPerson", targetNamespace = "http://service/", className = "service.GetPerson")
    @ResponseWrapper(localName = "getPersonResponse", targetNamespace = "http://service/", className = "service.GetPersonResponse")
    @Action(input = "http://service/Advisor/getPersonRequest", output = "http://service/Advisor/getPersonResponse")
    public Person getPerson(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<healthprofile.storage.service.Measure>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getHealthprofile", targetNamespace = "http://service/", className = "service.GetHealthprofile")
    @ResponseWrapper(localName = "getHealthprofileResponse", targetNamespace = "http://service/", className = "service.GetHealthprofileResponse")
    @Action(input = "http://service/Advisor/getHealthprofileRequest", output = "http://service/Advisor/getHealthprofileResponse")
    public List<Measure> getHealthprofile(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns healthprofile.storage.service.Measure
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMeasure", targetNamespace = "http://service/", className = "service.GetMeasure")
    @ResponseWrapper(localName = "getMeasureResponse", targetNamespace = "http://service/", className = "service.GetMeasureResponse")
    @Action(input = "http://service/Advisor/getMeasureRequest", output = "http://service/Advisor/getMeasureResponse")
    public Measure getMeasure(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<healthprofile.storage.service.Measure>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMeasureHistory", targetNamespace = "http://service/", className = "service.GetMeasureHistory")
    @ResponseWrapper(localName = "getMeasureHistoryResponse", targetNamespace = "http://service/", className = "service.GetMeasureHistoryResponse")
    @Action(input = "http://service/Advisor/getMeasureHistoryRequest", output = "http://service/Advisor/getMeasureHistoryResponse")
    public List<Measure> getMeasureHistory(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        XMLGregorianCalendar arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        XMLGregorianCalendar arg3);

    /**
     * 
     * @param arg0
     * @return
     *     returns healthprofile.storage.service.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "savePerson", targetNamespace = "http://service/", className = "service.SavePerson")
    @ResponseWrapper(localName = "savePersonResponse", targetNamespace = "http://service/", className = "service.SavePersonResponse")
    @Action(input = "http://service/Advisor/savePersonRequest", output = "http://service/Advisor/savePersonResponse")
    public Person savePerson(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "saveHealthprofile", targetNamespace = "http://service/", className = "service.SaveHealthprofile")
    @ResponseWrapper(localName = "saveHealthprofileResponse", targetNamespace = "http://service/", className = "service.SaveHealthprofileResponse")
    @Action(input = "http://service/Advisor/saveHealthprofileRequest", output = "http://service/Advisor/saveHealthprofileResponse")
    public void saveHealthprofile(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        List<Measure> arg1);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "saveMeasure", targetNamespace = "http://service/", className = "service.SaveMeasure")
    @ResponseWrapper(localName = "saveMeasureResponse", targetNamespace = "http://service/", className = "service.SaveMeasureResponse")
    @Action(input = "http://service/Advisor/saveMeasureRequest", output = "http://service/Advisor/saveMeasureResponse")
    public void saveMeasure(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Measure arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2);

}
